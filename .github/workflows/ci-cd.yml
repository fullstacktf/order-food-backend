name: Test & Deploy on Digital Ocean
on: [push, pull_request]
jobs:
  #test:
  #  strategy:
  #    matrix:
  #      go-version: [1.17.x]
  #      os: [ubuntu-latest, macos-latest, windows-latest]
  #  runs-on: ${{ matrix.os }}
  #  steps:
  #  - name: Install Go
  #    uses: actions/setup-go@v2
  #    with:
  #      go-version: ${{ matrix.go-version }}
  #  - name: Checkout code
  #    uses: actions/checkout@v2
  #  - name: Test
  #    run: cd src && go test ./...

  build-docker:
    #needs: test
    runs-on: ubuntu-latest
    #if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build container image
      run: docker build -t $(echo $"DO_REGISTRY")/$(echo $"IMAGE_NAME"):$(echo $"GITHUB_SHA" | head -c7) .

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DO_ACCESS_TOKEN }}

    - name: Log in to DigitalOcean Container Registry with short-lived credentials
      run: doctl registry login --expiry-seconds 600

    - name: Push image to DigitalOcean Container Registry
      run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)

#    - name: build Docker image and push it to dockerhub
#      id: build-docker
#      uses: mr-smithers-excellent/docker-build-push@v5
#      with:
#        image: jncabdom/comiditapp
#        registry: docker.io
#        username: ${{ secrets.DOCKER_USERNAME }}
#        password: ${{ secrets.DOCKER_PASSWORD }}
#        addLatest: true
#    - name: Get output
#      run: echo "Pushed image ${{ steps.build-docker.outputs.imageName }} with tag ${{ steps.build-docker.outputs.tags }}"

#  deploy:
#    needs: test
#    runs-on: ubuntu-latest
#    # Only when pushing onto main (or merging PR)
#    if: github.event_name == 'push' && ${{ github.ref == 'refs/heads/main' }}
#    steps:
#      - name: Deploy to Digital Ocean droplet via SSH action
#        uses: fifsky/ssh-action@master
#        with:
#          host: ${{ secrets.DO_HOST }}
#          user: ${{ secrets.DO_USER }}
#          key: ${{ secrets.DO_KEY }}
#          command: |
#            cd /comiditapp-pruebas
#            echo 'hello from github actions' >> message.txt
#          args: "-tt"
